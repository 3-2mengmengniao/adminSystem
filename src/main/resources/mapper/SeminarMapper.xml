<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.test.seminar.mapper.SeminarMapper">

    <resultMap id="seminarInfoResultMap" type="com.test.seminar.entity.SeminarInfo">
        <id property="id" column="id"/>
        <result property="courseId" column="course_id"/>
        <result property="roundId" column="round_id"/>
        <result property="seminarName" column="seminar_name"/>
        <result property="introduction" column="introduction"/>
        <result property="maxGroup" column="max_team"/>
        <result property="visible" column="is_visible"/>
        <result property="seminarSerial" column="seminar_serial"/>
        <result property="registrationStartTime" column="enroll_start_time"/>
        <result property="registrationEndTime" column="enroll_end_time"/>
    </resultMap>

    <resultMap id="seminarControlResultMap" type="com.test.seminar.entity.SeminarControl">
        <id property="id" column="id"/>
        <result property="classId" column="klass_id"/>
        <result property="seminarInfoId" column="seminar_id"/>
        <result property="seminarStatus" column="status"/>
        <result property="reportDDL" column="report_ddl"/>
        <association property="courseClass" javaType="com.test.seminar.entity.CourseClass" column="id" select="com.test.seminar.mapper.CourseClassMapper.getCourseClassBySeminarControlId"/>
        <association property="seminarInfo" javaType="com.test.seminar.entity.SeminarInfo" column="id" select="getSeminarInfoBySeminarControlId"/>
        <collection property="presentationList" javaType="ArrayList" ofType="com.test.seminar.entity.Presentation" column="id" select="com.test.seminar.mapper.PresentationMapper.getPresentationBySeminarControlId"/>
        <collection property="questionList" javaType="ArrayList" ofType="com.test.seminar.entity.Question" column="id" select="com.test.seminar.mapper.QuestionMapper.getQuestionBySeminarControlId"/>
        <collection property="seminarScoreList" javaType="ArrayList" ofType="com.test.seminar.entity.SeminarScore" column="id" select="com.test.seminar.mapper.SeminarMapper.getSeminarScoreBySeminarControlId"/>
    </resultMap>
    
    <resultMap id="seminarScoreResultMap" type="com.test.seminar.entity.SeminarScore">
        <id property="id" column="id"/>
        <result property="totalScore" column="total_score"/>
        <result property="presentationScore" column="presentation_score"/>
        <result property="questionScore" column="question_score"/>
        <result property="reportScore" column="report_score"/>
    </resultMap>

    <select id="getSeminarInfoBySeminarInfoId" resultMap="seminarInfoResultMap">
        select id,course_id,round_id,seminar_name,introduction,max_team,is_visible,seminar_serial,enroll_start_time,enroll_end_time
        from seminar
        where id=#{seminarInfoId}
    </select>

    <select id="getSeminarInfoBySeminarControlId" resultMap="seminarInfoResultMap">
        select id,course_id,round_id,seminar_name,introduction,max_team,is_visible,seminar_serial,enroll_start_time,enroll_end_time
        from seminar
        where id=#{seminarControlId}
    </select>

    <select id="getSeminarInfoByRoundId" resultMap="seminarInfoResultMap">
        select id,course_id,round_id,seminar_name,introduction,max_team,is_visible,seminar_serial,enroll_start_time,enroll_end_time
        from seminar
        where round_id=#{roundId}
    </select>
    
    <insert id="insertSeminarInfo">
        insert into seminar(course_id,round_id,seminar_name,introduction,max_team,is_visible,seminar_serial,enroll_start_time,enroll_end_time)
        values(#{courseId},#{roundId},#{seminarInfo.seminarName},#{seminarInfo.introduction},
        #{seminarInfo.maxGroup},#{seminarInfo.visible},#{seminarInfo.seminarSerial},#{seminarInfo.registrationStartTime},#{seminarInfo.registrationEndTime})
    </insert>

    <update id="updateSeminarInfo">
        update seminar
        <set>
            <if test="seminarInfo.courseId!=null">
                course_id=#{seminarInfo.courseId},
            </if>
            <if test="seminarInfo.roundId!=null">
                round_id=#{seminarInfo.roundId},
            </if>
            <if test="seminarInfo.seminarName!=null">
                seminar_name=#{seminarInfo.seminarName},
            </if>
            <if test="seminarInfo.introduction!=null">
                introduction=#{seminarInfo.introduction},
            </if>
            <if test="seminarInfo.maxGroup!=null">
                max_team=#{seminarInfo.maxGroup},
            </if>
            <if test="seminarInfo.visible!=null">
                is_visible=#{seminarInfo.visible},
            </if>
            <if test="seminarInfo.seminarSerial!=null">
                seminar_serial=#{seminarInfo.seminarSerial},
            </if>
            <if test="seminarInfo.registrationStartTime!=null">
                enroll_start_time=#{seminarInfo.registrationStartTime},
            </if>
            <if test="seminarInfo.registrationEndTime!=null">
                enroll_end_time=#{seminarInfo.registrationEndTime},
            </if>
        </set>
        where id=#{seminarInfo.id}
    </update>

    <delete id="deleteSeminarInfoBySeminarInfoId">
        delete from seminar where id=#{seminarInfoId}
    </delete>


    <select id="getSeminarControlBySeminarControlId" resultMap="seminarControlResultMap">
        select id,klass_id,seminar_id,status,report_ddl
        from klass_seminar
        where id=#{seminarControlId}
    </select>

    <insert id="insertSeminarControl">
        insert into klass_seminar(klass_id,seminar_id,status,report_ddl)
        values(#{classId},#{seminarInfoId},#{seminarControl.seminarStatus},#{seminarControl.reportDDL})
    </insert>

    <update id="updateSeminarControl">
        update klass_seminar
        <set>
            <if test="seminarControl.classId!=null">
                klass_id=#{seminarControl.classId},
            </if>
            <if test="seminarControl.seminarInfoId!=null">
                seminar_id=#{seminarControl.seminarInfoId},
            </if>
            <if test="seminarControl.seminarStatus!=null">
                status=#{seminarControl.seminarStatus},
            </if>
            <if test="seminarControl.reportDDL!=null">
                report_ddl=#{seminarControl.reportDDL},
            </if>
        </set>
        where id=#{seminarControl.id}
    </update>

    <delete id="deleteSeminarControlBySeminarControlId">
        delete from klass_seminar where id=#{seminarControlId}
    </delete>

    <select id="getSeminarControlByClassIdAndSeminarInfo" resultMap="seminarControlResultMap">
        select id,klass_id,seminar_id,status,report_ddl
        from klass_seminar
        where klass_id=#{classId} and seminar_id=#{seminarInfoId}
    </select>

    <select id="getSeminarScoreBySeminarScoreId" resultMap="seminarScoreResultMap">
    select id,totalScore,presentationScore,questionScore,reportScore
    from seminar_score
    where id=#{seminarScoreId}
    </select>

    <select id="getSeminarScoreBySeminarControlIdAndTeamId" resultMap="seminarScoreResultMap">
        select id,totalScore,presentationScore,questionScore,reportScore
        from seminar_score
        where klass_seminar_id=#{seminarScoreId} and team_id=#{teamId}
    </select>

    <select id="getSeminarScoreByTeamId" resultMap="seminarScoreResultMap">
        select id,totalScore,presentationScore,questionScore,reportScore
        from seminar_score
        where team_id=#{teamId}
    </select>

    <select id="getSeminarScoreBySeminarControlId" resultMap="seminarScoreResultMap">
        select id,totalScore,presentationScore,questionScore,reportScore
        from seminar_score
        where klass_seminar_id=#{seminarControlId}
    </select>
    
    <insert id="insertSeminarScore">
        insert into seminar_score(total_score,presentation_score,question_score,report_score)
        values (#{seminarScore.totalScore},#{seminarScore.presentationScore},#{seminarScore.questionScore},#{seminarScore.reportScore})
    </insert>

    <update id="updateSeminarScore">
        update seminar_score
        <set>
            <if test="seminarScore.totalScore!=null">
                total_score=#{seminarScore.totalScore},
            </if>
            <if test="seminarScore.presentationScore!=null">
                prensentation_score=#{seminarScore.presentationScore},
            </if>
            <if test="seminarScore.questionScore!=null">
                question_score=#{seminarScore.questionScore},
            </if>
            <if test="seminarScore.reportScore!=null">
                report_score=#{seminarScore.reportScore},
            </if>
        </set>
          where id=#{seminarScore.id}
    </update>

    <delete id="deleteSeminarScoreBySeminarScoreId">
        delete from seminar_score where id=#{seminarScoreId}
    </delete>



</mapper>